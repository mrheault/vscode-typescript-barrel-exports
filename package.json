{
  "name": "vscode-typescript-barrel-exports",
  "displayName": "Just Another TS Barrel Exporter",
  "description": "Create and maintain barrel export files `index.ts`. Configurable including named exports.",
  "author": "Mike Rheault",
  "publisher": "mikerheault",
  "icon": "images/barrel-exports-icon.png",
  "version": "0.0.1",
  "engines": {
    "vscode": "^1.93.0"
  },
  "categories": [
    "Programming Languages",
    "Other"
  ],
  "activationEvents": [],
  "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "ts.barrel-exports.generateBarrel",
        "title": "Generate Barrel File"
      }
    ],
    "menus": {
      "explorer/context": [
        {
          "submenu": "ts.createBarrel",
          "when": "explorerResourceIsFolder",
          "group": "TS@1"
        }
      ],
      "ts.createBarrel": [
        {
          "command": "ts.barrel-exports.generateBarrel",
          "when": "explorerResourceIsFolder",
          "group": "TS@0"
        }
      ]
    },
    "submenus": [
      {
        "id": "ts.createBarrel",
        "label": "Barrel Export Generator"
      }
    ],
    "configuration": {
      "type": "object",
      "title": "TS Barrel Generator",
      "properties": {
        "tsBarrelGenerator.config.namedExports": {
          "type": "boolean",
          "default": false,
          "description": "Specify if you want to use named exports in the barrel file."
        },
        "tsBarrelGenerator.config.semis": {
          "type": "boolean",
          "default": true,
          "description": "Specify if you want to enable/disable the usage of semis in the barrel file."
        },
        "tsBarrelGenerator.config.includeFoldersToExport": {
          "type": "boolean",
          "default": true,
          "description": "Specify if you want to include folder as well to the module export. Will only be applied if folder contains a `index.ts` file."
        },
        "tsBarrelGenerator.config.quotes": {
          "type": "string",
          "default": "'",
          "enum": [
            "'",
            "\""
          ],
          "enumDescriptions": [
            "Single quote",
            "Double quote"
          ],
          "description": "Specify the character that you want to use as the quoting character; typically ' or \""
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "npm run check-types && npm run lint && node esbuild.js",
    "watch": "npm-run-all -p watch:*",
    "watch:esbuild": "node esbuild.js --watch",
    "watch:tsc": "tsc --noEmit --watch --project tsconfig.json",
    "package": "npm run check-types && npm run lint && node esbuild.js --production",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "clean-user-data": "rimraf .vscode-test/user-data && rimraf out",
    "pretest": "npm run clean-user-data && npm run compile-tests && npm run compile && npm run lint",
    "check-types": "tsc --noEmit",
    "lint": "eslint src",
    "test": "vscode-test"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.9",
    "@types/node": "20.x",
    "@types/proxyquire": "^1.3.31",
    "@types/sinon": "^17.0.3",
    "@types/vscode": "^1.94.0",
    "@typescript-eslint/eslint-plugin": "^8.12.1",
    "@typescript-eslint/parser": "^8.12.1",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.4.1",
    "esbuild": "^0.24.0",
    "eslint": "^9.13.0",
    "lru-cache": "^11.0.1",
    "npm-run-all": "^4.1.5",
    "prettier": "^3.3.3",
    "proxyquire": "^2.1.3",
    "rimraf": "^6.0.1",
    "sinon": "^19.0.2",
    "typescript": "^5.6.3"
  }
}
